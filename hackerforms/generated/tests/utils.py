###############################################################################
##             This file is generated by hackerforms-protocol.               ##
##        Do not change this file. Any changes will be overwritten.          ##
###############################################################################
import json
import os
from .example_instances import example_instances

METADATA_FILEPATH = os.path.join(os.path.dirname(__file__), "metadata.json")


def load_widget_metadata():
    with open(METADATA_FILEPATH) as f:
        widgets = json.load(f)["widgets"]
        del widgets["list-input"]
        return widgets


def load_widget_test_instances():
    return [example_instance.json() for example_instance in example_instances]


def types_compatible(prop, schema):
    if type(schema["type"]) == list:
        return any(
            types_compatible(prop, {**schema, "type": type}) for type in schema["type"]
        )

    if schema["type"] == "string":
        return type(prop) == str
    if schema["type"] == "number":
        return type(prop) == int or type(prop) == float
    if schema["type"] == "boolean":
        return type(prop) == bool
    if schema["type"] == "array":
        return type(prop) == list
    if schema["type"] == "object":
        return type(prop) == dict
    if schema["type"] == "null":
        return prop == None
    if schema["type"] == "any":
        return True
    raise Exception(f"Unknown type: {schema['type']}")


def to_generic_type(type):
    if type == str:
        return "string"
    if type == int:
        return "number"
    if type == bool:
        return "boolean"
    if type == list:
        return "array"
    if type == dict:
        return "object"
    if type == None:
        return "null"
    raise Exception(f"Unknown type: {type}")
